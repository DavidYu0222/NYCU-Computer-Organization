20 63 11 11  // [00400000] addi $3, $3, 0x1111 		   ; 
8f 84 00 00  // [00400004] lw $4, 0($28)                   ; 10: lw      $a0, 0($gp)
8f 85 00 04  // [00400008] lw $5, 4($28)                   ; 11: lw      $a1, 4($gp)
af 83 00 10  // [0040000c] sw $3, 16($28)
00 bc 40 20  // [00400010] add $8, $5, $28                 ; 12: add     $t0, $a1, $gp   # t0 = gp, since `lw $a1` is at ID
8f 86 00 08  // [00400014] lw $6, 8($28)                   ; 13: lw      $a2, 8($gp)
00 a5 48 20  // [00400018] add $9, $5, $5                  ; 14: add     $t1, $a1, $a1   # t1 = 2, since `lw $a1` is at MEM (when this enter ID, lw enter WB)
8f 87 00 0c  // [0040001c] lw $7, 12($28)                  ; 15: lw      $a3, 12($gp)
00 09 50 22  // [00400020] sub $10, $0, $9                 ; 16: sub     $t2, $0, $t1    # t2 = 0, since `add $t1` is at MEM
10 60 00 0b  // [00400024] beq $v1, $0, 44	           ; 17: beq     $v1, $0, end    # not taken
00 c7 58 2a  // [00400028] slt $11, $6, $7                 ; 18: slt     $t3, $a2, $a3   # t3 = 1, Read after write need to wait for ? more instructions?
03 8b 68 25  // [0040002c] or $13, $28, $11                ; 20: or      $t5, $gp, $t3   # t5 = gp, since t3 has not been written yet
8f 8c 00 04  // [00400030] lw $12, 4($28)
00 ab 70 24  // [00400034] and $14, $5, $11                ; 21: and     $t6, $a1, $t3   # t6 = 1, since t3 is written in this cycle
11 6c 00 06  // [00400038] beq $11, $12, 24[end-0x00400030]; 22: beq     $t3, $t4, end   # taken
20 11 00 01  // [0040003c] addi $17, $0, 0x0001            ; 23: addi    $s1, $0, 1      
af 9c 00 00  // [00400040] sw  $28, 0($28)          	   ; 24: sw 	 $gp, 0($gp)	 # 0($gp) = 0x10008000 
20 13 00 03  // [00400044] addi $19, $0, 0x0003            ; 25: addi    $s3, $0, 3
00 c6 a0 20  // [00400048] add $20, $6, $6                 ; 26: add     $s4, $a2, $a2
00 c7 a8 20  // [0040004c] add $21, $6, $7                 ; 27: add     $s5, $a2, $a3
00 e7 b0 20  // [00400050] add $22, $7, $7                 ; 28: add     $s6, $a3, $a3
02 86 b8 20  // [00400054] add $23, $20, $6                ; 29: add     $s7, $s4, $a2   # s7 = 2